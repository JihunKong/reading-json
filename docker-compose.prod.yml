version: '3.8'

# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  postgres:
    restart: always
    environment:
      POSTGRES_DB: reading_json_prod
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  generator:
    restart: always
    command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "--timeout", "120", "app:app"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grader:
    restart: always
    command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "--timeout", "120", "app:app"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  student-api:
    restart: always
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "--timeout", "60", "main:app"]
    environment:
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGINS: ${CORS_ORIGINS:-https://reading.example.com}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  admin-api:
    restart: always
    command: ["gunicorn", "-w", "2", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "--timeout", "60", "main:app"]
    environment:
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGINS: ${CORS_ORIGINS:-https://admin.reading.example.com}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery-worker:
    restart: always
    command: celery -A tasks worker --loglevel=warning --concurrency=8 --max-tasks-per-child=100
    deploy:
      replicas: 2
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery-beat:
    restart: always
    command: celery -A tasks beat --loglevel=warning
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      target: production
    restart: always
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: https://api.reading.example.com
    volumes: []  # Remove source code mount in production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    restart: always
    volumes:
      - ./infrastructure/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/conf.d/prod:/etc/nginx/conf.d:ro
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl:ro
      - ./infrastructure/nginx/static:/usr/share/nginx/html:ro
      - nginx_logs:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"